version: '3.8'

# Docker Compose para Desenvolvimento do GarageRoute66

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: garage_db_dev
    environment:
      POSTGRES_DB: garageroute66_dev
      POSTGRES_USER: garage_dev
      POSTGRES_PASSWORD: garage_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Porta diferente para não conflitar
    networks:
      - garage_dev_network

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: garage_redis_dev
    ports:
      - "6380:6379"  # Porta diferente
    volumes:
      - redis_dev_data:/data
    networks:
      - garage_dev_network

  # Aplicação Django (Desenvolvimento)
  web:
    build:
      context: .
      target: development  # Multi-stage build
    container_name: garage_web_dev
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-not-for-production
      - DB_HOST=db
      - DB_NAME=garageroute66_dev
      - DB_USER=garage_dev
      - DB_PASSWORD=garage_dev_password
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - COMPANY_NAME=GarageRoute66 Dev
    volumes:
      - .:/app  # Mount do código para hot reload
      - static_dev_volume:/app/staticfiles
      - media_dev_volume:/app/media
      - logs_dev_volume:/app/logs
    ports:
      - "8001:8000"  # Porta diferente
    depends_on:
      - db
      - redis
    networks:
      - garage_dev_network
    command: python manage.py runserver 0.0.0.0:8000

volumes:
  postgres_dev_data:
  redis_dev_data:
  static_dev_volume:
  media_dev_volume:
  logs_dev_volume:

networks:
  garage_dev_network:
    driver: bridge